import com.github.spotbugs.snom.Confidence
import com.github.spotbugs.snom.Effort

plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.5.7'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.diffplug.spotless' version '8.0.0'
	id("com.github.spotbugs") version "6.4.2"

}


apply from: 'gradle/spotless.gradle'

group = 'com.braintech'
version = '0.0.1-SNAPSHOT'




java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'


	compileOnly 'org.projectlombok:lombok'
	implementation 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
}

spotbugs {
	toolVersion = '4.8.3'
	effort = com.github.spotbugs.snom.Effort.MAX
	reportLevel = com.github.spotbugs.snom.Confidence.valueOf('LOW')
	excludeFilter = file('spotbugs-exclude.xml')
	ignoreFailures = false
}


tasks.withType(com.github.spotbugs.snom.SpotBugsTask) {
	reports {
		html.required = true
		html.outputLocation = file("$buildDir/reports/spotbugs.html")
	}
}


tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('bootRun') {
	dependsOn 'spotbugsMain'
}
